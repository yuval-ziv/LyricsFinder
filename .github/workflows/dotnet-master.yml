name: .NET

on:
  push:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Test
        run: dotnet test --no-build --verbosity normal


      - name: Bump build version
        id: bump
        uses: vers-one/dotnet-project-version-updater@v1.5
        with:
          file: "**/*.csproj"
          version: bump-build

      - run: |
          git config user.name "Lyrics Finder"
          git config user.email "lyrics-finder@users.noreply.github.com"
          git add .
          git commit -m "Bump project version to ${{ steps.bump.outputs.newVersion }}"
          git push

      - name: Build EXE
        id: build-exe
        run: dotnet publish -r win-x64 -p:PublishSingleFile=true

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump.outputs.newVersion }}
          release_name: ${{ steps.bump.outputs.newVersion }}
          draft: true
          prerelease: false

      - uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./LyricsFinder/bin/Release/net8.0/win-x64/LyricsFinder.exe
          asset_name: LyricsFinder-x64.exe
          asset_content_type: application/exe

      - uses: eregon/publish-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          release_id: ${{ steps.create_release.outputs.id }}
    

